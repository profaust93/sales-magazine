buildscript {
    repositories {
        mavenCentral()
    }
}

subprojects { subProject ->
    tasks.withType(JavaCompile.class).all {
        task ->
            task.options.compilerArgs += [
                    "-nowarn",
                    "-encoding", "UTF-8",
            ]
    }
}

allprojects {

    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'

    version = '1.0-SNAPSHOT'

//    configurations {
//        compile.exclude module: 'log4j'
//        compile.exclude module: 'slf4j-log4j12'
//    }

    repositories {
        mavenCentral()
        maven {
            url 'http://repo.spring.io/milestone'
        }
        mavenLocal()

    }

    ext {
        libraries = [
                bootLib       : [
                        'org.springframework.boot:spring-boot-starter',
                        'org.springframework.boot:spring-boot-starter-jersey',
                        'com.fasterxml.jackson.core:jackson-databind:2.8.4',
                        'com.fasterxml.jackson.core:jackson-core:2.8.4',
                        'com.fasterxml.jackson.core:jackson-annotations:2.8.4',
                        'org.springframework.boot:spring-boot-starter-data-jpa'

                ],
                aopLib        : [
                        'org.springframework.boot:spring-boot-starter-aop',
                ],
                ioLib         : [
                        'org.springframework.boot:spring-boot-starter-mail',
                        'org.springframework.boot:spring-boot-starter-integration',
                        'org.springframework.integration:spring-integration-ip',
                ],
                persistenceLib: [
                        'mysql:mysql-connector-java:6.0.4',
                        'org.hsqldb:hsqldb:2.3.4',


                ],
                utilLib       : [
                        'commons-lang:commons-lang:2.6',
                        'com.google.guava:guava:19.0',
                        'org.liquibase:liquibase-core:3.5.3',
                        //'org.projectlombok:lombok:1.16.10'

                ],
                testLib       : [
                        'org.springframework.boot:spring-boot-starter-test',
                        'com.netflix.feign:feign-core:8.18.0',
                        'com.netflix.feign:feign-jaxrs:8.18.0',
                        'com.netflix.feign:feign-jackson:8.18.0',
                        'org.mockito:mockito-all:1.10.19',
                ],

                jerseyLib     : [
                        'org.glassfish.jersey.containers:jersey-container-servlet:2.24',
                        'org.glassfish.jersey.core:jersey-server:2.24',
                        'org.glassfish.jersey.core:jersey-client:2.24',
                        'org.glassfish.jersey.core:jersey-common:2.24',
                        'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.24'

                ],

                jmsLib        :[
                        'org.springframework.amqp:spring-rabbit:1.5.6.RELEASE',
                        'org.springframework.boot:spring-boot-starter-parent:1.4.3.RELEASE',
                        'org.springframework.boot:spring-boot-starter-amqp:1.4.3.RELEASE',
                        'javax.jms:javax.jms-api:2.0.1',
                        'javax.ws.rs:javax.ws.rs-api:2.0.1',
                        'org.springframework.boot:spring-boot-starter-web:1.4.3.RELEASE'
                ],
        ]
    }
}